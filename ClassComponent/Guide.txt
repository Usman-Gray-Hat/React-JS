=================
REACT COMPONENTS:
=================

* Components are independent and reusable pieces of code.

* Components are the building blocks of any React App.

* Components are like functions that return HTML elements.

* Components come in two types:

1. Class Components
2. Functional Components.

* But in this lecture, we will concentrate on Class components.

=================
CLASS COMPONENTS:
=================

* These components are simple classes (made up of multiple functions that add functionality
  to the application).

* All class based components are child classes for the "Component" class of ReactJS (React.Component)
  which exists inside React module.

* The class must implement a render() member function which returns a React component to be rendered,
  similar to a return keyword of a functional component.

* Note: A render() member function exists inside Component class.

=========================
PRACTICAL IMPLEMENTATION:
=========================

//App.js//
import logo from './logo.svg';
import './App.css';
import React from 'react';

class App extends React.Component {
    render() {
        return (
            <h1> This is my 1st class </h1>
        );
    }
}
export default App;

//index.js//
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <App />
);

reportWebVitals();

* Note: You can also use named export technique to export "Component class" from react module, so that you only need to
  use "Component" keyword to inherit "Component class" with child classes.

* Example:
//App.js//
import React, {Component} from 'react';
import logo from './logo.svg';
import './App.css';

class App extends Component {
    render() {
        return (
            <h1> This is my 1st class </h1>
        );
    }
}
export default App;

* You can export class components as well as functional components at the same time in a same file.

* Example:
//App.js//
import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';

class MyClass extends Component {
    render() {
        return (
            <h1> This is my Class Component </h1>
        );
    }
}

function MyFunction() {
    return (
        <h1> This is my Functional Component </h1>
    );
}

export { MyClass, MyFunction };

//inde.js//
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import { MyClass, MyFunction } from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <>
    <MyClass />
    <MyFunction />
  </>
);

reportWebVitals();

* Important Point: You can also implement export default or named export by using "export" or "export default" keyword
  just right before the 'function' or 'class' keyword.

* Example:
//App.js//
import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';

export default class MyClass extends Component {
    render() {
        return (
            <h1> This is my Class Component </h1>
        );
    }
}

export function MyFunction() {
    return (
        <h1> This is my Functional Component </h1>
    );
}

//index.js//
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import MyClass, { MyFunction } from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <>
    <MyClass />
    <MyFunction />
  </>
);

reportWebVitals();

* Note: Component name always starts with Capital letter e-g:
  <App /> not <app />

* If you write tag in lowercase like <div/> then react treats this as a DOM tags but,
  if you write tag in First letter uppercase like <App /> then it represents a react component.

=====================================================
SHORT-CUTS OF CREATING CLASS & FUNCTIONAL COMPONENTS:
=====================================================

* In VS Code, install extension "ES7 React/Redux/GraphQL".

===============================
SHORT-CUTS OF CLASS COMPONENTS:
===============================

-> rcc  (React Class Component)
-> rccp (React Class Component With PropTypes)

====================================
SHORT-CUTS OF FUNCTIONAL COMPONENTS:
====================================

-> rfc  (React Functional Component)
-> rfce (React Functional Export Component)
-> rfcp (React Functional Component With PropTypes)

========================================
SHORT-CUTS OF ARROW FUNCTION COMPONENTS:
========================================

-> rafc  (React Arrow Function Component)
-> rafce (React Arrow Function Export Component)
-> rafcp (React Arrow Function Component With PropTypes)