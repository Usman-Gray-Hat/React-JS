===============================
DEFAULT EXPORT VS NAMED EXPORT:
===============================

* ES6 provides us to import a module and use it in other files.

* ES6 provides two ways to export a module from a file:
i)  default export
ii) named export 

================================
DEFAULT EXPORT (export default):
================================

* One can have only one default export per file.

* When we import we have to specify Alias name, but you can set any name to Alias name.

======================
NAMED EXPORT (export):
======================

* With named exports, one can have multiple named exports per file.

* Then import the specific exports they want surrounded in curly braces.

* The name of imported module has to be the same as the name of the exported module
  surrounded in curly braces.

=========================
PRACTICAL IMPLEMENTATION:
=========================

//App.js//
import React from 'react';
import logo from './logo.svg';
import './App.css';

function MyFunction1() {
    return (
        <h1>This is function 1</h1>
    );
}
function MyFunction2() {
    return (
        <h1>This is function 2</h1>
    );
}

export { MyFunction1, MyFunction2 };

//Index.js//
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import {MyFunction1,MyFunction2} from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <div>
    <MyFunction1 />
    <MyFunction2 />
  </div>
); 

reportWebVitals();


* Note: You can also implement Named Export using "export" keyword just right before function keyword.

========
EXAMPLE:
========
//App.js//
import React from 'react';
import logo from './logo.svg';
import './App.css';

export function MyFunction1() {
    return (
        <h1>This is function 1</h1>
    );
}
export function MyFunction2() {
    return (
        <h1>This is function 2</h1>
    );
}

================
IMPORTANT POINT:
================

* In default export, you are allowed to export only 1 component per file.

* In named export, you can export multiple components with the help of name of the function inside
  curly brackets separated by commas, but make sure, the Alias name of the imported module
  in "index.js" has to be the same name of the exported module.

* Both in default export and in named export, the Alias name's first letter has to be capital.

* You can set any name to the Alias name when importing component from the default export. But,
  in named export, Alias name of the imported component has to be the same name of exported component.

* You can also call one component inside another component.

export function MyFunction1() {
    return (
        <>
        <h1>This is function 1</h1>
        <MyFunction1 />
	</>
    );
}
export function MyFunction2() {
    return (
        <h1>This is function 2</h1>
    );
}

* You can implement both default export & named export together in the same file.
========
EXAMPLE:
========
//App.js//
import React from 'react';
import logo from './logo.svg';
import './App.css';

function MyFunction1() {
    return (
        <h1>This is function 1</h1>
    );
}
function MyFunction2() {
    return (
        <h1>This is function 2</h1>
    );
}
export default MyFunction1;
export {MyFunction2};

//Index.js//
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App, {MyFunction2} from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <div>
    <App />
    <MyFunction2 />
  </div>
);